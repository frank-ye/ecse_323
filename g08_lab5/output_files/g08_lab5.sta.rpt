TimeQuest Timing Analyzer report for g08_lab5
Sun Nov 26 17:17:20 2017
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk'
 12. Slow Model Hold: 'clk'
 13. Slow Model Minimum Pulse Width: 'clk'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'clk'
 24. Fast Model Hold: 'clk'
 25. Fast Model Minimum Pulse Width: 'clk'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                       ;
+--------------------+----------------------------------------------------+
; Quartus II Version ; Version 13.0.0 Build 156 04/24/2013 SJ Web Edition ;
; Revision Name      ; g08_lab5                                           ;
; Device Family      ; Cyclone II                                         ;
; Device Name        ; EP2C20F484C7                                       ;
; Timing Models      ; Final                                              ;
; Delay Model        ; Combined                                           ;
; Rise/Fall Delays   ; Unavailable                                        ;
+--------------------+----------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 4           ;
; Maximum allowed            ; 2           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 1           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     Processor 1            ; 100.0%      ;
;     Processors 2-4         ;   0.0%      ;
+----------------------------+-------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                          ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+
; clk        ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 245.64 MHz ; 245.64 MHz      ; clk        ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------+
; Slow Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clk   ; -3.071 ; -47.830       ;
+-------+--------+---------------+


+-------------------------------+
; Slow Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clk   ; 0.445 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clk   ; -1.631 ; -27.293               ;
+-------+--------+-----------------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                              ;
+--------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+
; -3.071 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.109      ;
; -3.071 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.109      ;
; -3.060 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.098      ;
; -3.060 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.098      ;
; -3.049 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.087      ;
; -3.049 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.087      ;
; -3.038 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.076      ;
; -3.038 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.076      ;
; -3.018 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.056      ;
; -3.018 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.056      ;
; -3.007 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.045      ;
; -3.007 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 4.045      ;
; -2.849 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.887      ;
; -2.849 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.887      ;
; -2.838 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 3.876      ;
; -2.838 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 3.876      ;
; -2.782 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.820      ;
; -2.782 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.820      ;
; -2.771 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 3.809      ;
; -2.771 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 3.809      ;
; -2.718 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.756      ;
; -2.595 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.633      ;
; -2.595 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.633      ;
; -2.595 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.633      ;
; -2.595 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.633      ;
; -2.595 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.633      ;
; -2.589 ; \state_update:SUM_COMPUTER_IN[0]  ; state.A                           ; clk          ; clk         ; 1.000        ; -0.006     ; 3.621      ;
; -2.569 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.607      ;
; -2.542 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.580      ;
; -2.542 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.580      ;
; -2.542 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.580      ;
; -2.542 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.580      ;
; -2.542 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.580      ;
; -2.536 ; \state_update:SUM_COMPUTER_IN[1]  ; state.A                           ; clk          ; clk         ; 1.000        ; -0.006     ; 3.568      ;
; -2.516 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.554      ;
; -2.516 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.554      ;
; -2.516 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.554      ;
; -2.516 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.554      ;
; -2.516 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.554      ;
; -2.510 ; \state_update:SUM_COMPUTER_IN[3]  ; state.A                           ; clk          ; clk         ; 1.000        ; -0.006     ; 3.542      ;
; -2.493 ; \state_update:SUM_COMPUTER_IN[0]  ; state.C                           ; clk          ; clk         ; 1.000        ; -0.006     ; 3.525      ;
; -2.440 ; \state_update:SUM_COMPUTER_IN[1]  ; state.C                           ; clk          ; clk         ; 1.000        ; -0.006     ; 3.472      ;
; -2.414 ; \state_update:SUM_COMPUTER_IN[3]  ; state.C                           ; clk          ; clk         ; 1.000        ; -0.006     ; 3.446      ;
; -2.351 ; \state_update:SUM_COMPUTER_IN[0]  ; state.B                           ; clk          ; clk         ; 1.000        ; -0.006     ; 3.383      ;
; -2.351 ; \state_update:SUM_COMPUTER_IN[0]  ; state.D                           ; clk          ; clk         ; 1.000        ; -0.006     ; 3.383      ;
; -2.347 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.385      ;
; -2.347 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.385      ;
; -2.347 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.385      ;
; -2.347 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.385      ;
; -2.347 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.385      ;
; -2.324 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.362      ;
; -2.317 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.355      ;
; -2.317 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.355      ;
; -2.317 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.355      ;
; -2.317 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.355      ;
; -2.317 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.355      ;
; -2.300 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.338      ;
; -2.298 ; \state_update:SUM_COMPUTER_IN[1]  ; state.B                           ; clk          ; clk         ; 1.000        ; -0.006     ; 3.330      ;
; -2.298 ; \state_update:SUM_COMPUTER_IN[1]  ; state.D                           ; clk          ; clk         ; 1.000        ; -0.006     ; 3.330      ;
; -2.272 ; \state_update:SUM_COMPUTER_IN[3]  ; state.B                           ; clk          ; clk         ; 1.000        ; -0.006     ; 3.304      ;
; -2.272 ; \state_update:SUM_COMPUTER_IN[3]  ; state.D                           ; clk          ; clk         ; 1.000        ; -0.006     ; 3.304      ;
; -2.114 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.152      ;
; -2.112 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.150      ;
; -2.112 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.150      ;
; -2.112 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.150      ;
; -2.112 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.150      ;
; -2.112 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.150      ;
; -2.108 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 3.146      ;
; -2.078 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 3.116      ;
; -2.038 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.076      ;
; -2.013 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.051      ;
; -2.013 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.051      ;
; -2.013 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.051      ;
; -2.013 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.051      ;
; -2.013 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.051      ;
; -2.012 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.050      ;
; -2.012 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.050      ;
; -2.001 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 3.039      ;
; -2.001 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 3.039      ;
; -1.965 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.003      ;
; -1.965 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.003      ;
; -1.965 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.003      ;
; -1.965 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.003      ;
; -1.965 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.003      ;
; -1.951 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.989      ;
; -1.951 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.989      ;
; -1.951 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.989      ;
; -1.951 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.989      ;
; -1.945 ; \state_update:SUM_COMPUTER_IN[2]  ; state.A                           ; clk          ; clk         ; 1.000        ; -0.006     ; 2.977      ;
; -1.939 ; \state_update:HUMAN_WINS_IN[1]    ; state.C                           ; clk          ; clk         ; 1.000        ; -0.006     ; 2.971      ;
; -1.922 ; state.E                           ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.006      ; 2.966      ;
; -1.922 ; state.E                           ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.006      ; 2.966      ;
; -1.922 ; state.E                           ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.006      ; 2.966      ;
; -1.922 ; state.E                           ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.006      ; 2.966      ;
; -1.922 ; state.E                           ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.006      ; 2.966      ;
; -1.909 ; \state_update:COMPUTER_WINS_IN[1] ; state.C                           ; clk          ; clk         ; 1.000        ; -0.006     ; 2.941      ;
; -1.895 ; state.C                           ; state.A                           ; clk          ; clk         ; 1.000        ; 0.000      ; 2.933      ;
; -1.891 ; \state_update:HUMAN_WINS_IN[1]    ; state.A                           ; clk          ; clk         ; 1.000        ; -0.006     ; 2.923      ;
; -1.890 ; \state_update:HUMAN_WINS_IN[1]    ; state.B                           ; clk          ; clk         ; 1.000        ; -0.006     ; 2.922      ;
; -1.873 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.911      ;
+--------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                              ;
+-------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                         ; To Node                           ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+
; 0.445 ; state.A                           ; state.A                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; state.E                           ; state.E                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; GAME_OVER~reg0                    ; GAME_OVER~reg0                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.731      ;
; 0.636 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.922      ;
; 0.654 ; state.D                           ; state.E                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.940      ;
; 0.660 ; state.E                           ; GAME_OVER~reg0                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.946      ;
; 0.932 ; state.A                           ; state.B                           ; clk          ; clk         ; 0.000        ; 0.000      ; 1.218      ;
; 0.973 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.259      ;
; 1.114 ; state.E                           ; HUMAN_WINS[1]~reg0                ; clk          ; clk         ; 0.000        ; 0.000      ; 1.400      ;
; 1.114 ; state.E                           ; COMPUTER_WINS[1]~reg0             ; clk          ; clk         ; 0.000        ; 0.000      ; 1.400      ;
; 1.127 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.413      ;
; 1.143 ; \state_update:HUMAN_WINS_IN[1]    ; WINNER~reg0                       ; clk          ; clk         ; 0.000        ; -0.001     ; 1.428      ;
; 1.157 ; state.B                           ; state.C                           ; clk          ; clk         ; 0.000        ; 0.000      ; 1.443      ;
; 1.167 ; state.E                           ; state.B                           ; clk          ; clk         ; 0.000        ; 0.000      ; 1.453      ;
; 1.168 ; state.E                           ; state.A                           ; clk          ; clk         ; 0.000        ; 0.000      ; 1.454      ;
; 1.218 ; \state_update:HUMAN_WINS_IN[1]    ; HUMAN_WINS[1]~reg0                ; clk          ; clk         ; 0.000        ; -0.006     ; 1.498      ;
; 1.253 ; state.B                           ; state.D                           ; clk          ; clk         ; 0.000        ; 0.000      ; 1.539      ;
; 1.272 ; \state_update:COMPUTER_WINS_IN[1] ; COMPUTER_WINS[1]~reg0             ; clk          ; clk         ; 0.000        ; -0.006     ; 1.552      ;
; 1.274 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.560      ;
; 1.293 ; state.E                           ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 0.000        ; 0.006      ; 1.585      ;
; 1.326 ; state.E                           ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 0.000        ; 0.006      ; 1.618      ;
; 1.332 ; \state_update:HUMAN_WINS_IN[0]    ; WINNER~reg0                       ; clk          ; clk         ; 0.000        ; -0.001     ; 1.617      ;
; 1.337 ; state.E                           ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 0.000        ; 0.006      ; 1.629      ;
; 1.372 ; state.E                           ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 0.000        ; 0.006      ; 1.664      ;
; 1.372 ; state.E                           ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 0.000        ; 0.006      ; 1.664      ;
; 1.400 ; state.C                           ; state.C                           ; clk          ; clk         ; 0.000        ; 0.000      ; 1.686      ;
; 1.428 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.714      ;
; 1.432 ; \state_update:HUMAN_WINS_IN[0]    ; COMPUTER_WINS[1]~reg0             ; clk          ; clk         ; 0.000        ; -0.006     ; 1.712      ;
; 1.435 ; \state_update:HUMAN_WINS_IN[0]    ; HUMAN_WINS[1]~reg0                ; clk          ; clk         ; 0.000        ; -0.006     ; 1.715      ;
; 1.436 ; \state_update:HUMAN_WINS_IN[0]    ; HUMAN_WINS[0]~reg0                ; clk          ; clk         ; 0.000        ; -0.001     ; 1.721      ;
; 1.440 ; state.D                           ; state.B                           ; clk          ; clk         ; 0.000        ; 0.000      ; 1.726      ;
; 1.458 ; state.D                           ; state.D                           ; clk          ; clk         ; 0.000        ; 0.000      ; 1.744      ;
; 1.474 ; state.E                           ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 0.000        ; 0.006      ; 1.766      ;
; 1.475 ; state.E                           ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 0.000        ; 0.006      ; 1.767      ;
; 1.475 ; \state_update:COMPUTER_WINS_IN[0] ; COMPUTER_WINS[0]~reg0             ; clk          ; clk         ; 0.000        ; -0.001     ; 1.760      ;
; 1.479 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.765      ;
; 1.479 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.765      ;
; 1.486 ; state.D                           ; state.A                           ; clk          ; clk         ; 0.000        ; 0.000      ; 1.772      ;
; 1.486 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.772      ;
; 1.490 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.776      ;
; 1.494 ; state.A                           ; state.C                           ; clk          ; clk         ; 0.000        ; 0.000      ; 1.780      ;
; 1.506 ; state.E                           ; state.D                           ; clk          ; clk         ; 0.000        ; 0.000      ; 1.792      ;
; 1.509 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.795      ;
; 1.509 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.795      ;
; 1.579 ; \state_update:COMPUTER_WINS_IN[0] ; COMPUTER_WINS[1]~reg0             ; clk          ; clk         ; 0.000        ; -0.006     ; 1.859      ;
; 1.582 ; \state_update:COMPUTER_WINS_IN[0] ; HUMAN_WINS[1]~reg0                ; clk          ; clk         ; 0.000        ; -0.006     ; 1.862      ;
; 1.588 ; WINNER~reg0                       ; WINNER~reg0                       ; clk          ; clk         ; 0.000        ; 0.000      ; 1.874      ;
; 1.610 ; state.E                           ; HUMAN_WINS[0]~reg0                ; clk          ; clk         ; 0.000        ; 0.005      ; 1.901      ;
; 1.610 ; state.E                           ; COMPUTER_WINS[0]~reg0             ; clk          ; clk         ; 0.000        ; 0.005      ; 1.901      ;
; 1.610 ; state.E                           ; WINNER~reg0                       ; clk          ; clk         ; 0.000        ; 0.005      ; 1.901      ;
; 1.628 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.914      ;
; 1.659 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.945      ;
; 1.749 ; \state_update:HUMAN_WINS_IN[0]    ; state.E                           ; clk          ; clk         ; 0.000        ; -0.006     ; 2.029      ;
; 1.760 ; \state_update:SUM_COMPUTER_IN[4]  ; state.B                           ; clk          ; clk         ; 0.000        ; -0.006     ; 2.040      ;
; 1.760 ; \state_update:SUM_COMPUTER_IN[4]  ; state.D                           ; clk          ; clk         ; 0.000        ; -0.006     ; 2.040      ;
; 1.772 ; state.D                           ; state.C                           ; clk          ; clk         ; 0.000        ; 0.000      ; 2.058      ;
; 1.783 ; \state_update:HUMAN_WINS_IN[0]    ; GAME_OVER~reg0                    ; clk          ; clk         ; 0.000        ; -0.006     ; 2.063      ;
; 1.787 ; \state_update:COMPUTER_WINS_IN[1] ; HUMAN_WINS[1]~reg0                ; clk          ; clk         ; 0.000        ; -0.006     ; 2.067      ;
; 1.805 ; state.B                           ; state.B                           ; clk          ; clk         ; 0.000        ; 0.000      ; 2.091      ;
; 1.814 ; \state_update:HUMAN_WINS_IN[1]    ; COMPUTER_WINS[1]~reg0             ; clk          ; clk         ; 0.000        ; -0.006     ; 2.094      ;
; 1.820 ; state.E                           ; state.C                           ; clk          ; clk         ; 0.000        ; 0.000      ; 2.106      ;
; 1.846 ; state.B                           ; state.A                           ; clk          ; clk         ; 0.000        ; 0.000      ; 2.132      ;
; 1.896 ; \state_update:COMPUTER_WINS_IN[0] ; state.E                           ; clk          ; clk         ; 0.000        ; -0.006     ; 2.176      ;
; 1.902 ; \state_update:SUM_COMPUTER_IN[4]  ; state.C                           ; clk          ; clk         ; 0.000        ; -0.006     ; 2.182      ;
; 1.914 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.200      ;
; 1.930 ; \state_update:COMPUTER_WINS_IN[0] ; GAME_OVER~reg0                    ; clk          ; clk         ; 0.000        ; -0.006     ; 2.210      ;
; 1.939 ; \state_update:HUMAN_WINS_IN[0]    ; state.D                           ; clk          ; clk         ; 0.000        ; -0.006     ; 2.219      ;
; 1.960 ; \state_update:COMPUTER_WINS_IN[1] ; WINNER~reg0                       ; clk          ; clk         ; 0.000        ; -0.001     ; 2.245      ;
; 1.962 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.248      ;
; 1.962 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.248      ;
; 1.962 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.248      ;
; 1.962 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.248      ;
; 1.962 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.248      ;
; 1.993 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.279      ;
; 1.998 ; \state_update:SUM_COMPUTER_IN[4]  ; state.A                           ; clk          ; clk         ; 0.000        ; -0.006     ; 2.278      ;
; 2.019 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.305      ;
; 2.072 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.358      ;
; 2.086 ; \state_update:COMPUTER_WINS_IN[0] ; state.D                           ; clk          ; clk         ; 0.000        ; -0.006     ; 2.366      ;
; 2.094 ; state.E                           ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.006      ; 2.386      ;
; 2.098 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.384      ;
; 2.100 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.386      ;
; 2.101 ; \state_update:COMPUTER_WINS_IN[1] ; state.E                           ; clk          ; clk         ; 0.000        ; -0.006     ; 2.381      ;
; 2.113 ; \state_update:SUM_COMPUTER_IN[5]  ; state.B                           ; clk          ; clk         ; 0.000        ; -0.006     ; 2.393      ;
; 2.113 ; \state_update:SUM_COMPUTER_IN[5]  ; state.D                           ; clk          ; clk         ; 0.000        ; -0.006     ; 2.393      ;
; 2.131 ; \state_update:HUMAN_WINS_IN[1]    ; state.E                           ; clk          ; clk         ; 0.000        ; -0.006     ; 2.411      ;
; 2.135 ; \state_update:COMPUTER_WINS_IN[1] ; GAME_OVER~reg0                    ; clk          ; clk         ; 0.000        ; -0.006     ; 2.415      ;
; 2.137 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.423      ;
; 2.143 ; state.D                           ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 0.000        ; 0.006      ; 2.435      ;
; 2.143 ; state.D                           ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 0.000        ; 0.006      ; 2.435      ;
; 2.148 ; state.D                           ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 0.000        ; 0.006      ; 2.440      ;
; 2.148 ; state.D                           ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 0.000        ; 0.006      ; 2.440      ;
; 2.149 ; state.E                           ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 0.000        ; 0.006      ; 2.441      ;
; 2.157 ; \state_update:HUMAN_WINS_IN[0]    ; COMPUTER_WINS[0]~reg0             ; clk          ; clk         ; 0.000        ; -0.001     ; 2.442      ;
; 2.165 ; \state_update:HUMAN_WINS_IN[1]    ; GAME_OVER~reg0                    ; clk          ; clk         ; 0.000        ; -0.006     ; 2.445      ;
; 2.171 ; state.E                           ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 0.000        ; 0.006      ; 2.463      ;
+-------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                                  ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                                ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; -1.631 ; 1.000        ; 2.631          ; Port Rate        ; clk   ; Rise       ; clk                                   ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; COMPUTER_WINS[0]~reg0                 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; COMPUTER_WINS[0]~reg0                 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; COMPUTER_WINS[1]~reg0                 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; COMPUTER_WINS[1]~reg0                 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; GAME_OVER~reg0                        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; GAME_OVER~reg0                        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; HUMAN_WINS[0]~reg0                    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; HUMAN_WINS[0]~reg0                    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; HUMAN_WINS[1]~reg0                    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; HUMAN_WINS[1]~reg0                    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; WINNER~reg0                           ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; WINNER~reg0                           ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[0]     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[0]     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[1]     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[1]     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[0]        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[0]        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[1]        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[1]        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[0]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[0]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[1]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[1]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[2]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[2]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[3]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[3]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[4]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[4]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[5]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[5]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.A                               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.A                               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.B                               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.B                               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.C                               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.C                               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.D                               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.D                               ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.E                               ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.E                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; COMPUTER_WINS[0]~reg0|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; COMPUTER_WINS[0]~reg0|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; COMPUTER_WINS[1]~reg0|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; COMPUTER_WINS[1]~reg0|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; GAME_OVER~reg0|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; GAME_OVER~reg0|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; HUMAN_WINS[0]~reg0|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; HUMAN_WINS[0]~reg0|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; HUMAN_WINS[1]~reg0|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; HUMAN_WINS[1]~reg0|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; WINNER~reg0|clk                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; WINNER~reg0|clk                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[0]|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[0]|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[1]|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[1]|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[0]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[0]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[1]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[1]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[0]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[0]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[1]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[1]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[2]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[2]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[3]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[3]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[4]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[4]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[5]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[5]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk                    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.A|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.A|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.B|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.B|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.C|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.C|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.D|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.D|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.E|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.E|clk                           ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+


+------------------------------------------------------------------------------+
; Setup Times                                                                  ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; HUMAN_LEGAL_PLAY ; clk        ; 4.884 ; 4.884 ; Rise       ; clk             ;
; NEW_CARD[*]      ; clk        ; 6.062 ; 6.062 ; Rise       ; clk             ;
;  NEW_CARD[0]     ; clk        ; 5.889 ; 5.889 ; Rise       ; clk             ;
;  NEW_CARD[1]     ; clk        ; 6.062 ; 6.062 ; Rise       ; clk             ;
;  NEW_CARD[2]     ; clk        ; 6.015 ; 6.015 ; Rise       ; clk             ;
;  NEW_CARD[3]     ; clk        ; 5.983 ; 5.983 ; Rise       ; clk             ;
;  NEW_CARD[4]     ; clk        ; 5.632 ; 5.632 ; Rise       ; clk             ;
;  NEW_CARD[5]     ; clk        ; 4.780 ; 4.780 ; Rise       ; clk             ;
; NEW_GAME         ; clk        ; 5.472 ; 5.472 ; Rise       ; clk             ;
; SUM_HUMAN[*]     ; clk        ; 6.779 ; 6.779 ; Rise       ; clk             ;
;  SUM_HUMAN[0]    ; clk        ; 6.779 ; 6.779 ; Rise       ; clk             ;
;  SUM_HUMAN[1]    ; clk        ; 6.640 ; 6.640 ; Rise       ; clk             ;
;  SUM_HUMAN[2]    ; clk        ; 6.620 ; 6.620 ; Rise       ; clk             ;
;  SUM_HUMAN[3]    ; clk        ; 6.511 ; 6.511 ; Rise       ; clk             ;
;  SUM_HUMAN[4]    ; clk        ; 6.698 ; 6.698 ; Rise       ; clk             ;
;  SUM_HUMAN[5]    ; clk        ; 5.985 ; 5.985 ; Rise       ; clk             ;
; TURN             ; clk        ; 5.194 ; 5.194 ; Rise       ; clk             ;
+------------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Hold Times                                                                     ;
+------------------+------------+--------+--------+------------+-----------------+
; Data Port        ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------------+------------+--------+--------+------------+-----------------+
; HUMAN_LEGAL_PLAY ; clk        ; -3.591 ; -3.591 ; Rise       ; clk             ;
; NEW_CARD[*]      ; clk        ; -4.081 ; -4.081 ; Rise       ; clk             ;
;  NEW_CARD[0]     ; clk        ; -4.601 ; -4.601 ; Rise       ; clk             ;
;  NEW_CARD[1]     ; clk        ; -4.417 ; -4.417 ; Rise       ; clk             ;
;  NEW_CARD[2]     ; clk        ; -4.815 ; -4.815 ; Rise       ; clk             ;
;  NEW_CARD[3]     ; clk        ; -4.501 ; -4.501 ; Rise       ; clk             ;
;  NEW_CARD[4]     ; clk        ; -4.081 ; -4.081 ; Rise       ; clk             ;
;  NEW_CARD[5]     ; clk        ; -4.532 ; -4.532 ; Rise       ; clk             ;
; NEW_GAME         ; clk        ; -3.460 ; -3.460 ; Rise       ; clk             ;
; SUM_HUMAN[*]     ; clk        ; -5.726 ; -5.726 ; Rise       ; clk             ;
;  SUM_HUMAN[0]    ; clk        ; -6.520 ; -6.520 ; Rise       ; clk             ;
;  SUM_HUMAN[1]    ; clk        ; -6.381 ; -6.381 ; Rise       ; clk             ;
;  SUM_HUMAN[2]    ; clk        ; -6.361 ; -6.361 ; Rise       ; clk             ;
;  SUM_HUMAN[3]    ; clk        ; -6.252 ; -6.252 ; Rise       ; clk             ;
;  SUM_HUMAN[4]    ; clk        ; -6.439 ; -6.439 ; Rise       ; clk             ;
;  SUM_HUMAN[5]    ; clk        ; -5.726 ; -5.726 ; Rise       ; clk             ;
; TURN             ; clk        ; -4.381 ; -4.381 ; Rise       ; clk             ;
+------------------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Clock to Output Times                                                         ;
+-------------------+------------+-------+-------+------------+-----------------+
; Data Port         ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-------------------+------------+-------+-------+------------+-----------------+
; COMPUTER_WINS[*]  ; clk        ; 7.433 ; 7.433 ; Rise       ; clk             ;
;  COMPUTER_WINS[0] ; clk        ; 7.127 ; 7.127 ; Rise       ; clk             ;
;  COMPUTER_WINS[1] ; clk        ; 7.433 ; 7.433 ; Rise       ; clk             ;
; GAME_OVER         ; clk        ; 7.134 ; 7.134 ; Rise       ; clk             ;
; HUMAN_WINS[*]     ; clk        ; 6.887 ; 6.887 ; Rise       ; clk             ;
;  HUMAN_WINS[0]    ; clk        ; 6.859 ; 6.859 ; Rise       ; clk             ;
;  HUMAN_WINS[1]    ; clk        ; 6.887 ; 6.887 ; Rise       ; clk             ;
; WINNER            ; clk        ; 7.142 ; 7.142 ; Rise       ; clk             ;
+-------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                 ;
+-------------------+------------+-------+-------+------------+-----------------+
; Data Port         ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-------------------+------------+-------+-------+------------+-----------------+
; COMPUTER_WINS[*]  ; clk        ; 7.127 ; 7.127 ; Rise       ; clk             ;
;  COMPUTER_WINS[0] ; clk        ; 7.127 ; 7.127 ; Rise       ; clk             ;
;  COMPUTER_WINS[1] ; clk        ; 7.433 ; 7.433 ; Rise       ; clk             ;
; GAME_OVER         ; clk        ; 7.134 ; 7.134 ; Rise       ; clk             ;
; HUMAN_WINS[*]     ; clk        ; 6.859 ; 6.859 ; Rise       ; clk             ;
;  HUMAN_WINS[0]    ; clk        ; 6.859 ; 6.859 ; Rise       ; clk             ;
;  HUMAN_WINS[1]    ; clk        ; 6.887 ; 6.887 ; Rise       ; clk             ;
; WINNER            ; clk        ; 7.142 ; 7.142 ; Rise       ; clk             ;
+-------------------+------------+-------+-------+------------+-----------------+


+--------------------------------+
; Fast Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clk   ; -0.622 ; -6.344        ;
+-------+--------+---------------+


+-------------------------------+
; Fast Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clk   ; 0.215 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clk   ; -1.380 ; -22.380               ;
+-------+--------+-----------------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                                              ;
+--------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+
; -0.622 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.654      ;
; -0.622 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.654      ;
; -0.616 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.648      ;
; -0.616 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.648      ;
; -0.616 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.648      ;
; -0.616 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.648      ;
; -0.610 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.642      ;
; -0.610 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.642      ;
; -0.584 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.616      ;
; -0.584 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.616      ;
; -0.578 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.610      ;
; -0.578 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.610      ;
; -0.509 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.541      ;
; -0.509 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.541      ;
; -0.503 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.535      ;
; -0.503 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.535      ;
; -0.480 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.512      ;
; -0.480 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.512      ;
; -0.474 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.506      ;
; -0.474 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.506      ;
; -0.441 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.473      ;
; -0.441 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.473      ;
; -0.441 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.473      ;
; -0.441 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.473      ;
; -0.441 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.473      ;
; -0.402 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.434      ;
; -0.402 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.434      ;
; -0.402 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.434      ;
; -0.402 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.434      ;
; -0.402 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.434      ;
; -0.399 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.431      ;
; -0.399 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.431      ;
; -0.399 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.431      ;
; -0.399 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.431      ;
; -0.399 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.431      ;
; -0.367 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.399      ;
; -0.367 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.399      ;
; -0.367 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.399      ;
; -0.367 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.399      ;
; -0.367 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.399      ;
; -0.362 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.394      ;
; -0.360 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.392      ;
; -0.360 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.392      ;
; -0.360 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.392      ;
; -0.360 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.392      ;
; -0.360 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.392      ;
; -0.343 ; \state_update:SUM_COMPUTER_IN[0]  ; state.A                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.368      ;
; -0.337 ; \state_update:SUM_COMPUTER_IN[0]  ; state.C                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.362      ;
; -0.331 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.363      ;
; -0.304 ; \state_update:SUM_COMPUTER_IN[1]  ; state.A                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.329      ;
; -0.301 ; \state_update:SUM_COMPUTER_IN[3]  ; state.A                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.326      ;
; -0.298 ; \state_update:SUM_COMPUTER_IN[1]  ; state.C                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.323      ;
; -0.295 ; \state_update:SUM_COMPUTER_IN[3]  ; state.C                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.320      ;
; -0.289 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.321      ;
; -0.289 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.321      ;
; -0.289 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.321      ;
; -0.289 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.321      ;
; -0.289 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.321      ;
; -0.261 ; \state_update:SUM_COMPUTER_IN[0]  ; state.B                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.286      ;
; -0.260 ; \state_update:SUM_COMPUTER_IN[0]  ; state.D                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.285      ;
; -0.260 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.292      ;
; -0.242 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.274      ;
; -0.242 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.274      ;
; -0.242 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.274      ;
; -0.242 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.274      ;
; -0.242 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.274      ;
; -0.241 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.273      ;
; -0.241 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.273      ;
; -0.241 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.273      ;
; -0.241 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.273      ;
; -0.241 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.273      ;
; -0.237 ; state.E                           ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.007      ; 1.276      ;
; -0.237 ; state.E                           ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 1.000        ; 0.007      ; 1.276      ;
; -0.237 ; state.E                           ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.007      ; 1.276      ;
; -0.237 ; state.E                           ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.007      ; 1.276      ;
; -0.237 ; state.E                           ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.007      ; 1.276      ;
; -0.236 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.268      ;
; -0.236 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.268      ;
; -0.236 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.268      ;
; -0.236 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.268      ;
; -0.230 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.262      ;
; -0.230 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.262      ;
; -0.224 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.256      ;
; -0.224 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.256      ;
; -0.222 ; \state_update:SUM_COMPUTER_IN[1]  ; state.B                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.247      ;
; -0.221 ; \state_update:SUM_COMPUTER_IN[1]  ; state.D                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.246      ;
; -0.219 ; \state_update:SUM_COMPUTER_IN[3]  ; state.B                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.244      ;
; -0.218 ; \state_update:SUM_COMPUTER_IN[3]  ; state.D                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.243      ;
; -0.216 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.248      ;
; -0.154 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.186      ;
; -0.147 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.179      ;
; -0.138 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.170      ;
; -0.138 ; \state_update:SUM_COMPUTER_IN[2]  ; state.A                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.163      ;
; -0.132 ; \state_update:SUM_COMPUTER_IN[2]  ; state.C                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.157      ;
; -0.122 ; \state_update:HUMAN_WINS_IN[1]    ; state.C                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.147      ;
; -0.115 ; \state_update:COMPUTER_WINS_IN[1] ; state.C                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.140      ;
; -0.106 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.138      ;
; -0.100 ; \state_update:HUMAN_WINS_IN[1]    ; state.A                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.125      ;
; -0.100 ; \state_update:HUMAN_WINS_IN[1]    ; state.B                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.125      ;
; -0.093 ; \state_update:COMPUTER_WINS_IN[1] ; state.A                           ; clk          ; clk         ; 1.000        ; -0.007     ; 1.118      ;
+--------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                              ;
+-------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                         ; To Node                           ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; state.A                           ; state.A                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; state.E                           ; state.E                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; GAME_OVER~reg0                    ; GAME_OVER~reg0                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.247 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.399      ;
; 0.258 ; state.D                           ; state.E                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.410      ;
; 0.262 ; state.E                           ; GAME_OVER~reg0                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.414      ;
; 0.363 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.515      ;
; 0.382 ; state.A                           ; state.B                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.534      ;
; 0.421 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.573      ;
; 0.431 ; \state_update:HUMAN_WINS_IN[1]    ; WINNER~reg0                       ; clk          ; clk         ; 0.000        ; -0.001     ; 0.582      ;
; 0.442 ; state.B                           ; state.C                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.594      ;
; 0.449 ; state.E                           ; state.A                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.601      ;
; 0.449 ; state.E                           ; state.B                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.601      ;
; 0.459 ; \state_update:HUMAN_WINS_IN[1]    ; HUMAN_WINS[1]~reg0                ; clk          ; clk         ; 0.000        ; -0.007     ; 0.604      ;
; 0.468 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.620      ;
; 0.477 ; state.B                           ; state.D                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.629      ;
; 0.485 ; \state_update:COMPUTER_WINS_IN[1] ; COMPUTER_WINS[1]~reg0             ; clk          ; clk         ; 0.000        ; -0.007     ; 0.630      ;
; 0.495 ; state.E                           ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 0.000        ; 0.007      ; 0.654      ;
; 0.496 ; state.E                           ; \state_update:HUMAN_WINS_IN[1]    ; clk          ; clk         ; 0.000        ; 0.007      ; 0.655      ;
; 0.503 ; state.E                           ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 0.000        ; 0.007      ; 0.662      ;
; 0.526 ; state.E                           ; HUMAN_WINS[1]~reg0                ; clk          ; clk         ; 0.000        ; 0.000      ; 0.678      ;
; 0.526 ; state.E                           ; COMPUTER_WINS[1]~reg0             ; clk          ; clk         ; 0.000        ; 0.000      ; 0.678      ;
; 0.531 ; \state_update:HUMAN_WINS_IN[0]    ; WINNER~reg0                       ; clk          ; clk         ; 0.000        ; -0.001     ; 0.682      ;
; 0.534 ; state.C                           ; state.C                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.686      ;
; 0.539 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.691      ;
; 0.539 ; \state_update:COMPUTER_WINS_IN[1] ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.691      ;
; 0.546 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.698      ;
; 0.546 ; \state_update:HUMAN_WINS_IN[1]    ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.698      ;
; 0.547 ; \state_update:HUMAN_WINS_IN[0]    ; COMPUTER_WINS[1]~reg0             ; clk          ; clk         ; 0.000        ; -0.007     ; 0.692      ;
; 0.548 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.700      ;
; 0.549 ; \state_update:HUMAN_WINS_IN[0]    ; HUMAN_WINS[1]~reg0                ; clk          ; clk         ; 0.000        ; -0.007     ; 0.694      ;
; 0.553 ; state.D                           ; state.A                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.705      ;
; 0.556 ; state.A                           ; state.C                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.708      ;
; 0.563 ; state.E                           ; state.D                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.715      ;
; 0.564 ; \state_update:SUM_COMPUTER_IN[2]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.716      ;
; 0.568 ; state.D                           ; state.B                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.720      ;
; 0.568 ; state.D                           ; state.D                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.720      ;
; 0.569 ; \state_update:SUM_COMPUTER_IN[4]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.721      ;
; 0.572 ; state.E                           ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 0.000        ; 0.007      ; 0.731      ;
; 0.572 ; \state_update:HUMAN_WINS_IN[0]    ; HUMAN_WINS[0]~reg0                ; clk          ; clk         ; 0.000        ; -0.001     ; 0.723      ;
; 0.573 ; state.E                           ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 0.000        ; 0.007      ; 0.732      ;
; 0.594 ; \state_update:COMPUTER_WINS_IN[0] ; COMPUTER_WINS[1]~reg0             ; clk          ; clk         ; 0.000        ; -0.007     ; 0.739      ;
; 0.596 ; \state_update:COMPUTER_WINS_IN[0] ; HUMAN_WINS[1]~reg0                ; clk          ; clk         ; 0.000        ; -0.007     ; 0.741      ;
; 0.598 ; WINNER~reg0                       ; WINNER~reg0                       ; clk          ; clk         ; 0.000        ; 0.000      ; 0.750      ;
; 0.601 ; state.E                           ; \state_update:COMPUTER_WINS_IN[0] ; clk          ; clk         ; 0.000        ; 0.007      ; 0.760      ;
; 0.601 ; state.E                           ; \state_update:HUMAN_WINS_IN[0]    ; clk          ; clk         ; 0.000        ; 0.007      ; 0.760      ;
; 0.618 ; \state_update:COMPUTER_WINS_IN[0] ; COMPUTER_WINS[0]~reg0             ; clk          ; clk         ; 0.000        ; -0.001     ; 0.769      ;
; 0.621 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.773      ;
; 0.628 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.780      ;
; 0.654 ; \state_update:SUM_COMPUTER_IN[4]  ; state.D                           ; clk          ; clk         ; 0.000        ; -0.007     ; 0.799      ;
; 0.655 ; \state_update:SUM_COMPUTER_IN[4]  ; state.B                           ; clk          ; clk         ; 0.000        ; -0.007     ; 0.800      ;
; 0.664 ; \state_update:HUMAN_WINS_IN[0]    ; state.E                           ; clk          ; clk         ; 0.000        ; -0.007     ; 0.809      ;
; 0.667 ; \state_update:HUMAN_WINS_IN[0]    ; GAME_OVER~reg0                    ; clk          ; clk         ; 0.000        ; -0.007     ; 0.812      ;
; 0.667 ; \state_update:COMPUTER_WINS_IN[1] ; HUMAN_WINS[1]~reg0                ; clk          ; clk         ; 0.000        ; -0.007     ; 0.812      ;
; 0.672 ; \state_update:HUMAN_WINS_IN[1]    ; COMPUTER_WINS[1]~reg0             ; clk          ; clk         ; 0.000        ; -0.007     ; 0.817      ;
; 0.675 ; state.B                           ; state.A                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.827      ;
; 0.683 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.835      ;
; 0.690 ; state.E                           ; state.C                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.842      ;
; 0.695 ; state.D                           ; state.C                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.847      ;
; 0.697 ; state.B                           ; state.B                           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.849      ;
; 0.705 ; state.E                           ; HUMAN_WINS[0]~reg0                ; clk          ; clk         ; 0.000        ; 0.006      ; 0.863      ;
; 0.705 ; state.E                           ; COMPUTER_WINS[0]~reg0             ; clk          ; clk         ; 0.000        ; 0.006      ; 0.863      ;
; 0.705 ; state.E                           ; WINNER~reg0                       ; clk          ; clk         ; 0.000        ; 0.006      ; 0.863      ;
; 0.711 ; \state_update:COMPUTER_WINS_IN[0] ; state.E                           ; clk          ; clk         ; 0.000        ; -0.007     ; 0.856      ;
; 0.713 ; \state_update:COMPUTER_WINS_IN[1] ; WINNER~reg0                       ; clk          ; clk         ; 0.000        ; -0.001     ; 0.864      ;
; 0.714 ; \state_update:COMPUTER_WINS_IN[0] ; GAME_OVER~reg0                    ; clk          ; clk         ; 0.000        ; -0.007     ; 0.859      ;
; 0.727 ; \state_update:SUM_COMPUTER_IN[3]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.879      ;
; 0.730 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.882      ;
; 0.731 ; \state_update:SUM_COMPUTER_IN[4]  ; state.C                           ; clk          ; clk         ; 0.000        ; -0.007     ; 0.876      ;
; 0.733 ; \state_update:HUMAN_WINS_IN[0]    ; state.D                           ; clk          ; clk         ; 0.000        ; -0.007     ; 0.878      ;
; 0.737 ; \state_update:SUM_COMPUTER_IN[4]  ; state.A                           ; clk          ; clk         ; 0.000        ; -0.007     ; 0.882      ;
; 0.761 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.913      ;
; 0.769 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.921      ;
; 0.778 ; \state_update:SUM_COMPUTER_IN[5]  ; state.D                           ; clk          ; clk         ; 0.000        ; -0.007     ; 0.923      ;
; 0.779 ; \state_update:SUM_COMPUTER_IN[5]  ; state.B                           ; clk          ; clk         ; 0.000        ; -0.007     ; 0.924      ;
; 0.780 ; \state_update:COMPUTER_WINS_IN[0] ; state.D                           ; clk          ; clk         ; 0.000        ; -0.007     ; 0.925      ;
; 0.782 ; \state_update:COMPUTER_WINS_IN[1] ; state.E                           ; clk          ; clk         ; 0.000        ; -0.007     ; 0.927      ;
; 0.785 ; \state_update:COMPUTER_WINS_IN[1] ; GAME_OVER~reg0                    ; clk          ; clk         ; 0.000        ; -0.007     ; 0.930      ;
; 0.786 ; state.E                           ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.007      ; 0.945      ;
; 0.789 ; \state_update:HUMAN_WINS_IN[1]    ; state.E                           ; clk          ; clk         ; 0.000        ; -0.007     ; 0.934      ;
; 0.791 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.943      ;
; 0.792 ; \state_update:HUMAN_WINS_IN[1]    ; GAME_OVER~reg0                    ; clk          ; clk         ; 0.000        ; -0.007     ; 0.937      ;
; 0.792 ; \state_update:HUMAN_WINS_IN[0]    ; \state_update:COMPUTER_WINS_IN[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.944      ;
; 0.802 ; \state_update:SUM_COMPUTER_IN[1]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.954      ;
; 0.814 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.966      ;
; 0.814 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.966      ;
; 0.814 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:SUM_COMPUTER_IN[3]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.966      ;
; 0.814 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:SUM_COMPUTER_IN[4]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.966      ;
; 0.814 ; \state_update:SUM_COMPUTER_IN[5]  ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.966      ;
; 0.818 ; state.E                           ; \state_update:SUM_COMPUTER_IN[2]  ; clk          ; clk         ; 0.000        ; 0.007      ; 0.977      ;
; 0.824 ; \state_update:HUMAN_WINS_IN[0]    ; COMPUTER_WINS[0]~reg0             ; clk          ; clk         ; 0.000        ; -0.001     ; 0.975      ;
; 0.825 ; \state_update:COMPUTER_WINS_IN[0] ; HUMAN_WINS[0]~reg0                ; clk          ; clk         ; 0.000        ; -0.001     ; 0.976      ;
; 0.831 ; state.E                           ; \state_update:SUM_COMPUTER_IN[0]  ; clk          ; clk         ; 0.000        ; 0.007      ; 0.990      ;
; 0.838 ; \state_update:COMPUTER_WINS_IN[0] ; \state_update:SUM_COMPUTER_IN[5]  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.990      ;
; 0.848 ; \state_update:SUM_COMPUTER_IN[0]  ; \state_update:SUM_COMPUTER_IN[1]  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.000      ;
+-------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                                  ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                                ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; COMPUTER_WINS[0]~reg0                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; COMPUTER_WINS[0]~reg0                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; COMPUTER_WINS[1]~reg0                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; COMPUTER_WINS[1]~reg0                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; GAME_OVER~reg0                        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; GAME_OVER~reg0                        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; HUMAN_WINS[0]~reg0                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; HUMAN_WINS[0]~reg0                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; HUMAN_WINS[1]~reg0                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; HUMAN_WINS[1]~reg0                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; WINNER~reg0                           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; WINNER~reg0                           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[0]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[0]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[1]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[1]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[0]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[0]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[1]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[1]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[3]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[4]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[4]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[5]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[5]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.A                               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.A                               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.B                               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.B                               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.C                               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.C                               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.D                               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.D                               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.E                               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.E                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; COMPUTER_WINS[0]~reg0|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; COMPUTER_WINS[0]~reg0|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; COMPUTER_WINS[1]~reg0|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; COMPUTER_WINS[1]~reg0|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; GAME_OVER~reg0|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; GAME_OVER~reg0|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; HUMAN_WINS[0]~reg0|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; HUMAN_WINS[0]~reg0|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; HUMAN_WINS[1]~reg0|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; HUMAN_WINS[1]~reg0|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; WINNER~reg0|clk                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; WINNER~reg0|clk                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[0]|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[0]|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[1]|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:COMPUTER_WINS_IN[1]|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[0]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[0]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[1]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:HUMAN_WINS_IN[1]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[0]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[0]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[1]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[1]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[2]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[2]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[3]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[3]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[4]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[4]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[5]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; \state_update:SUM_COMPUTER_IN[5]|clk  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk                    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.A|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.A|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.B|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.B|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.C|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.C|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.D|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.D|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.E|clk                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.E|clk                           ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+


+------------------------------------------------------------------------------+
; Setup Times                                                                  ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; HUMAN_LEGAL_PLAY ; clk        ; 2.180 ; 2.180 ; Rise       ; clk             ;
; NEW_CARD[*]      ; clk        ; 2.459 ; 2.459 ; Rise       ; clk             ;
;  NEW_CARD[0]     ; clk        ; 2.413 ; 2.413 ; Rise       ; clk             ;
;  NEW_CARD[1]     ; clk        ; 2.459 ; 2.459 ; Rise       ; clk             ;
;  NEW_CARD[2]     ; clk        ; 2.457 ; 2.457 ; Rise       ; clk             ;
;  NEW_CARD[3]     ; clk        ; 2.437 ; 2.437 ; Rise       ; clk             ;
;  NEW_CARD[4]     ; clk        ; 2.307 ; 2.307 ; Rise       ; clk             ;
;  NEW_CARD[5]     ; clk        ; 2.001 ; 2.001 ; Rise       ; clk             ;
; NEW_GAME         ; clk        ; 2.418 ; 2.418 ; Rise       ; clk             ;
; SUM_HUMAN[*]     ; clk        ; 2.867 ; 2.867 ; Rise       ; clk             ;
;  SUM_HUMAN[0]    ; clk        ; 2.867 ; 2.867 ; Rise       ; clk             ;
;  SUM_HUMAN[1]    ; clk        ; 2.774 ; 2.774 ; Rise       ; clk             ;
;  SUM_HUMAN[2]    ; clk        ; 2.781 ; 2.781 ; Rise       ; clk             ;
;  SUM_HUMAN[3]    ; clk        ; 2.728 ; 2.728 ; Rise       ; clk             ;
;  SUM_HUMAN[4]    ; clk        ; 2.794 ; 2.794 ; Rise       ; clk             ;
;  SUM_HUMAN[5]    ; clk        ; 2.562 ; 2.562 ; Rise       ; clk             ;
; TURN             ; clk        ; 2.152 ; 2.152 ; Rise       ; clk             ;
+------------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Hold Times                                                                     ;
+------------------+------------+--------+--------+------------+-----------------+
; Data Port        ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------------+------------+--------+--------+------------+-----------------+
; HUMAN_LEGAL_PLAY ; clk        ; -1.594 ; -1.594 ; Rise       ; clk             ;
; NEW_CARD[*]      ; clk        ; -1.747 ; -1.747 ; Rise       ; clk             ;
;  NEW_CARD[0]     ; clk        ; -1.927 ; -1.927 ; Rise       ; clk             ;
;  NEW_CARD[1]     ; clk        ; -1.870 ; -1.870 ; Rise       ; clk             ;
;  NEW_CARD[2]     ; clk        ; -2.002 ; -2.002 ; Rise       ; clk             ;
;  NEW_CARD[3]     ; clk        ; -1.918 ; -1.918 ; Rise       ; clk             ;
;  NEW_CARD[4]     ; clk        ; -1.747 ; -1.747 ; Rise       ; clk             ;
;  NEW_CARD[5]     ; clk        ; -1.881 ; -1.881 ; Rise       ; clk             ;
; NEW_GAME         ; clk        ; -1.549 ; -1.549 ; Rise       ; clk             ;
; SUM_HUMAN[*]     ; clk        ; -2.436 ; -2.436 ; Rise       ; clk             ;
;  SUM_HUMAN[0]    ; clk        ; -2.741 ; -2.741 ; Rise       ; clk             ;
;  SUM_HUMAN[1]    ; clk        ; -2.648 ; -2.648 ; Rise       ; clk             ;
;  SUM_HUMAN[2]    ; clk        ; -2.655 ; -2.655 ; Rise       ; clk             ;
;  SUM_HUMAN[3]    ; clk        ; -2.602 ; -2.602 ; Rise       ; clk             ;
;  SUM_HUMAN[4]    ; clk        ; -2.668 ; -2.668 ; Rise       ; clk             ;
;  SUM_HUMAN[5]    ; clk        ; -2.436 ; -2.436 ; Rise       ; clk             ;
; TURN             ; clk        ; -1.856 ; -1.856 ; Rise       ; clk             ;
+------------------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Clock to Output Times                                                         ;
+-------------------+------------+-------+-------+------------+-----------------+
; Data Port         ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-------------------+------------+-------+-------+------------+-----------------+
; COMPUTER_WINS[*]  ; clk        ; 3.966 ; 3.966 ; Rise       ; clk             ;
;  COMPUTER_WINS[0] ; clk        ; 3.845 ; 3.845 ; Rise       ; clk             ;
;  COMPUTER_WINS[1] ; clk        ; 3.966 ; 3.966 ; Rise       ; clk             ;
; GAME_OVER         ; clk        ; 3.845 ; 3.845 ; Rise       ; clk             ;
; HUMAN_WINS[*]     ; clk        ; 3.768 ; 3.768 ; Rise       ; clk             ;
;  HUMAN_WINS[0]    ; clk        ; 3.746 ; 3.746 ; Rise       ; clk             ;
;  HUMAN_WINS[1]    ; clk        ; 3.768 ; 3.768 ; Rise       ; clk             ;
; WINNER            ; clk        ; 3.855 ; 3.855 ; Rise       ; clk             ;
+-------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                 ;
+-------------------+------------+-------+-------+------------+-----------------+
; Data Port         ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-------------------+------------+-------+-------+------------+-----------------+
; COMPUTER_WINS[*]  ; clk        ; 3.845 ; 3.845 ; Rise       ; clk             ;
;  COMPUTER_WINS[0] ; clk        ; 3.845 ; 3.845 ; Rise       ; clk             ;
;  COMPUTER_WINS[1] ; clk        ; 3.966 ; 3.966 ; Rise       ; clk             ;
; GAME_OVER         ; clk        ; 3.845 ; 3.845 ; Rise       ; clk             ;
; HUMAN_WINS[*]     ; clk        ; 3.746 ; 3.746 ; Rise       ; clk             ;
;  HUMAN_WINS[0]    ; clk        ; 3.746 ; 3.746 ; Rise       ; clk             ;
;  HUMAN_WINS[1]    ; clk        ; 3.768 ; 3.768 ; Rise       ; clk             ;
; WINNER            ; clk        ; 3.855 ; 3.855 ; Rise       ; clk             ;
+-------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                           ;
+------------------+---------+-------+----------+---------+---------------------+
; Clock            ; Setup   ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+---------+-------+----------+---------+---------------------+
; Worst-case Slack ; -3.071  ; 0.215 ; N/A      ; N/A     ; -1.631              ;
;  clk             ; -3.071  ; 0.215 ; N/A      ; N/A     ; -1.631              ;
; Design-wide TNS  ; -47.83  ; 0.0   ; 0.0      ; 0.0     ; -27.293             ;
;  clk             ; -47.830 ; 0.000 ; N/A      ; N/A     ; -27.293             ;
+------------------+---------+-------+----------+---------+---------------------+


+------------------------------------------------------------------------------+
; Setup Times                                                                  ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; HUMAN_LEGAL_PLAY ; clk        ; 4.884 ; 4.884 ; Rise       ; clk             ;
; NEW_CARD[*]      ; clk        ; 6.062 ; 6.062 ; Rise       ; clk             ;
;  NEW_CARD[0]     ; clk        ; 5.889 ; 5.889 ; Rise       ; clk             ;
;  NEW_CARD[1]     ; clk        ; 6.062 ; 6.062 ; Rise       ; clk             ;
;  NEW_CARD[2]     ; clk        ; 6.015 ; 6.015 ; Rise       ; clk             ;
;  NEW_CARD[3]     ; clk        ; 5.983 ; 5.983 ; Rise       ; clk             ;
;  NEW_CARD[4]     ; clk        ; 5.632 ; 5.632 ; Rise       ; clk             ;
;  NEW_CARD[5]     ; clk        ; 4.780 ; 4.780 ; Rise       ; clk             ;
; NEW_GAME         ; clk        ; 5.472 ; 5.472 ; Rise       ; clk             ;
; SUM_HUMAN[*]     ; clk        ; 6.779 ; 6.779 ; Rise       ; clk             ;
;  SUM_HUMAN[0]    ; clk        ; 6.779 ; 6.779 ; Rise       ; clk             ;
;  SUM_HUMAN[1]    ; clk        ; 6.640 ; 6.640 ; Rise       ; clk             ;
;  SUM_HUMAN[2]    ; clk        ; 6.620 ; 6.620 ; Rise       ; clk             ;
;  SUM_HUMAN[3]    ; clk        ; 6.511 ; 6.511 ; Rise       ; clk             ;
;  SUM_HUMAN[4]    ; clk        ; 6.698 ; 6.698 ; Rise       ; clk             ;
;  SUM_HUMAN[5]    ; clk        ; 5.985 ; 5.985 ; Rise       ; clk             ;
; TURN             ; clk        ; 5.194 ; 5.194 ; Rise       ; clk             ;
+------------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Hold Times                                                                     ;
+------------------+------------+--------+--------+------------+-----------------+
; Data Port        ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------------+------------+--------+--------+------------+-----------------+
; HUMAN_LEGAL_PLAY ; clk        ; -1.594 ; -1.594 ; Rise       ; clk             ;
; NEW_CARD[*]      ; clk        ; -1.747 ; -1.747 ; Rise       ; clk             ;
;  NEW_CARD[0]     ; clk        ; -1.927 ; -1.927 ; Rise       ; clk             ;
;  NEW_CARD[1]     ; clk        ; -1.870 ; -1.870 ; Rise       ; clk             ;
;  NEW_CARD[2]     ; clk        ; -2.002 ; -2.002 ; Rise       ; clk             ;
;  NEW_CARD[3]     ; clk        ; -1.918 ; -1.918 ; Rise       ; clk             ;
;  NEW_CARD[4]     ; clk        ; -1.747 ; -1.747 ; Rise       ; clk             ;
;  NEW_CARD[5]     ; clk        ; -1.881 ; -1.881 ; Rise       ; clk             ;
; NEW_GAME         ; clk        ; -1.549 ; -1.549 ; Rise       ; clk             ;
; SUM_HUMAN[*]     ; clk        ; -2.436 ; -2.436 ; Rise       ; clk             ;
;  SUM_HUMAN[0]    ; clk        ; -2.741 ; -2.741 ; Rise       ; clk             ;
;  SUM_HUMAN[1]    ; clk        ; -2.648 ; -2.648 ; Rise       ; clk             ;
;  SUM_HUMAN[2]    ; clk        ; -2.655 ; -2.655 ; Rise       ; clk             ;
;  SUM_HUMAN[3]    ; clk        ; -2.602 ; -2.602 ; Rise       ; clk             ;
;  SUM_HUMAN[4]    ; clk        ; -2.668 ; -2.668 ; Rise       ; clk             ;
;  SUM_HUMAN[5]    ; clk        ; -2.436 ; -2.436 ; Rise       ; clk             ;
; TURN             ; clk        ; -1.856 ; -1.856 ; Rise       ; clk             ;
+------------------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Clock to Output Times                                                         ;
+-------------------+------------+-------+-------+------------+-----------------+
; Data Port         ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-------------------+------------+-------+-------+------------+-----------------+
; COMPUTER_WINS[*]  ; clk        ; 7.433 ; 7.433 ; Rise       ; clk             ;
;  COMPUTER_WINS[0] ; clk        ; 7.127 ; 7.127 ; Rise       ; clk             ;
;  COMPUTER_WINS[1] ; clk        ; 7.433 ; 7.433 ; Rise       ; clk             ;
; GAME_OVER         ; clk        ; 7.134 ; 7.134 ; Rise       ; clk             ;
; HUMAN_WINS[*]     ; clk        ; 6.887 ; 6.887 ; Rise       ; clk             ;
;  HUMAN_WINS[0]    ; clk        ; 6.859 ; 6.859 ; Rise       ; clk             ;
;  HUMAN_WINS[1]    ; clk        ; 6.887 ; 6.887 ; Rise       ; clk             ;
; WINNER            ; clk        ; 7.142 ; 7.142 ; Rise       ; clk             ;
+-------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                 ;
+-------------------+------------+-------+-------+------------+-----------------+
; Data Port         ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-------------------+------------+-------+-------+------------+-----------------+
; COMPUTER_WINS[*]  ; clk        ; 3.845 ; 3.845 ; Rise       ; clk             ;
;  COMPUTER_WINS[0] ; clk        ; 3.845 ; 3.845 ; Rise       ; clk             ;
;  COMPUTER_WINS[1] ; clk        ; 3.966 ; 3.966 ; Rise       ; clk             ;
; GAME_OVER         ; clk        ; 3.845 ; 3.845 ; Rise       ; clk             ;
; HUMAN_WINS[*]     ; clk        ; 3.746 ; 3.746 ; Rise       ; clk             ;
;  HUMAN_WINS[0]    ; clk        ; 3.746 ; 3.746 ; Rise       ; clk             ;
;  HUMAN_WINS[1]    ; clk        ; 3.768 ; 3.768 ; Rise       ; clk             ;
; WINNER            ; clk        ; 3.855 ; 3.855 ; Rise       ; clk             ;
+-------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 302      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 302      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 15    ; 15   ;
; Unconstrained Input Port Paths  ; 73    ; 73   ;
; Unconstrained Output Ports      ; 6     ; 6    ;
; Unconstrained Output Port Paths ; 6     ; 6    ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Web Edition
    Info: Processing started: Sun Nov 26 17:17:18 2017
Info: Command: quartus_sta g08_lab5 -c g08_lab5
Info: qsta_default_script.tcl version: #1
Info (11104): Parallel Compilation has detected 4 hyper-threaded processors. However, the extra hyper-threaded processors will not be used by default. Parallel Compilation will use 2 of the 2 physical processors detected instead.
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'g08_lab5.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk clk
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -3.071
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.071       -47.830 clk 
Info (332146): Worst-case hold slack is 0.445
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.445         0.000 clk 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.631
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.631       -27.293 clk 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.622
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.622        -6.344 clk 
Info (332146): Worst-case hold slack is 0.215
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.215         0.000 clk 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -22.380 clk 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 3 warnings
    Info: Peak virtual memory: 531 megabytes
    Info: Processing ended: Sun Nov 26 17:17:20 2017
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


